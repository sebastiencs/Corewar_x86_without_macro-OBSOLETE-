
src/arguments.o:     format de fichier elf32-i386


DÃ©assemblage de la section .text:

00000000 <my_putstr>:
   0:	55                   	push   ebp
   1:	89 e5                	mov    ebp,esp
   3:	50                   	push   eax
   4:	53                   	push   ebx
   5:	52                   	push   edx
   6:	51                   	push   ecx
   7:	80 7d 08 00          	cmp    BYTE PTR [ebp+0x8],0x0
   b:	74 21                	je     2e <my_putstr.END>
   d:	bb 01 00 00 00       	mov    ebx,0x1
  12:	ba 01 00 00 00       	mov    edx,0x1

00000017 <my_putstr.LOOP>:
  17:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  1a:	80 38 00             	cmp    BYTE PTR [eax],0x0
  1d:	74 0f                	je     2e <my_putstr.END>
  1f:	b8 04 00 00 00       	mov    eax,0x4
  24:	8b 4d 08             	mov    ecx,DWORD PTR [ebp+0x8]
  27:	cd 80                	int    0x80
  29:	ff 45 08             	inc    DWORD PTR [ebp+0x8]
  2c:	eb e9                	jmp    17 <my_putstr.LOOP>

0000002e <my_putstr.END>:
  2e:	59                   	pop    ecx
  2f:	5a                   	pop    edx
  30:	5b                   	pop    ebx
  31:	58                   	pop    eax
  32:	5d                   	pop    ebp
  33:	c3                   	ret    

00000034 <is_error_in_args>:
  34:	55                   	push   ebp
  35:	89 e5                	mov    ebp,esp
  37:	51                   	push   ecx
  38:	b9 01 00 00 00       	mov    ecx,0x1
  3d:	83 7d 08 02          	cmp    DWORD PTR [ebp+0x8],0x2
  41:	0f 8c 84 00 00 00    	jl     cb <is_error_in_args.EXIT>

00000047 <is_error_in_args.LOOP>:
  47:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  4a:	39 c1                	cmp    ecx,eax
  4c:	7d 60                	jge    ae <is_error_in_args.ENDL>
  4e:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  51:	ff 34 88             	push   DWORD PTR [eax+ecx*4]
  54:	e8 fc ff ff ff       	call   55 <is_error_in_args.LOOP+0xe>
  59:	83 c4 04             	add    esp,0x4
  5c:	83 f8 00             	cmp    eax,0x0
  5f:	74 33                	je     94 <is_error_in_args.ELSE>

00000061 <is_error_in_args.IF>:
  61:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  64:	ff 74 88 04          	push   DWORD PTR [eax+ecx*4+0x4]
  68:	e8 fc ff ff ff       	call   69 <is_error_in_args.IF+0x8>
  6d:	83 c4 04             	add    esp,0x4
  70:	83 f8 ff             	cmp    eax,0xffffffff
  73:	75 1a                	jne    8f <is_error_in_args.NOTRET>
  75:	68 00 00 00 00       	push   0x0
  7a:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  7d:	ff 34 88             	push   DWORD PTR [eax+ecx*4]
  80:	e8 fc ff ff ff       	call   81 <is_error_in_args.IF+0x20>
  85:	83 c4 08             	add    esp,0x8
  88:	83 f8 00             	cmp    eax,0x0
  8b:	74 02                	je     8f <is_error_in_args.NOTRET>
  8d:	eb 3c                	jmp    cb <is_error_in_args.EXIT>

0000008f <is_error_in_args.NOTRET>:
  8f:	83 c1 02             	add    ecx,0x2
  92:	eb b3                	jmp    47 <is_error_in_args.LOOP>

00000094 <is_error_in_args.ELSE>:
  94:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
  97:	ff 34 88             	push   DWORD PTR [eax+ecx*4]
  9a:	e8 fc ff ff ff       	call   9b <is_error_in_args.ELSE+0x7>
  9f:	83 c4 04             	add    esp,0x4
  a2:	83 f8 ff             	cmp    eax,0xffffffff
  a5:	75 02                	jne    a9 <is_error_in_args.NTRET2>
  a7:	eb 22                	jmp    cb <is_error_in_args.EXIT>

000000a9 <is_error_in_args.NTRET2>:
  a9:	83 c1 01             	add    ecx,0x1
  ac:	eb 99                	jmp    47 <is_error_in_args.LOOP>

000000ae <is_error_in_args.ENDL>:
  ae:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
  b1:	ff 75 08             	push   DWORD PTR [ebp+0x8]
  b4:	e8 fc ff ff ff       	call   b5 <is_error_in_args.ENDL+0x7>
  b9:	83 c4 08             	add    esp,0x8
  bc:	83 f8 ff             	cmp    eax,0xffffffff
  bf:	74 0a                	je     cb <is_error_in_args.EXIT>

000000c1 <is_error_in_args.END>:
  c1:	59                   	pop    ecx
  c2:	89 ec                	mov    esp,ebp
  c4:	5d                   	pop    ebp
  c5:	b8 00 00 00 00       	mov    eax,0x0
  ca:	c3                   	ret    

000000cb <is_error_in_args.EXIT>:
  cb:	59                   	pop    ecx
  cc:	89 ec                	mov    esp,ebp
  ce:	5d                   	pop    ebp
  cf:	b8 ff ff ff ff       	mov    eax,0xffffffff
  d4:	c3                   	ret    

000000d5 <get_args>:
  d5:	55                   	push   ebp
  d6:	89 e5                	mov    ebp,esp
  d8:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
  db:	ff 75 08             	push   DWORD PTR [ebp+0x8]
  de:	e8 51 ff ff ff       	call   34 <is_error_in_args>
  e3:	83 c4 08             	add    esp,0x8
  e6:	83 f8 ff             	cmp    eax,0xffffffff
  e9:	74 65                	je     150 <get_args.USAGE>
  eb:	ff 75 10             	push   DWORD PTR [ebp+0x10]
  ee:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
  f1:	ff 75 08             	push   DWORD PTR [ebp+0x8]
  f4:	e8 fc ff ff ff       	call   f5 <get_args+0x20>
  f9:	83 c4 0c             	add    esp,0xc
  fc:	ff 75 10             	push   DWORD PTR [ebp+0x10]
  ff:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
 102:	ff 75 08             	push   DWORD PTR [ebp+0x8]
 105:	e8 fc ff ff ff       	call   106 <get_args+0x31>
 10a:	83 c4 0c             	add    esp,0xc
 10d:	83 f8 ff             	cmp    eax,0xffffffff
 110:	74 35                	je     147 <get_args.EXIT>
 112:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 115:	ff 70 08             	push   DWORD PTR [eax+0x8]
 118:	ff 70 0c             	push   DWORD PTR [eax+0xc]
 11b:	e8 fc ff ff ff       	call   11c <get_args+0x47>
 120:	83 c4 08             	add    esp,0x8
 123:	83 f8 ff             	cmp    eax,0xffffffff
 126:	74 1f                	je     147 <get_args.EXIT>
 128:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
 12b:	ff 70 08             	push   DWORD PTR [eax+0x8]
 12e:	ff 70 0c             	push   DWORD PTR [eax+0xc]
 131:	e8 fc ff ff ff       	call   132 <get_args+0x5d>
 136:	83 c4 08             	add    esp,0x8
 139:	83 f8 ff             	cmp    eax,0xffffffff
 13c:	74 09                	je     147 <get_args.EXIT>

0000013e <get_args.END>:
 13e:	89 ec                	mov    esp,ebp
 140:	5d                   	pop    ebp
 141:	b8 00 00 00 00       	mov    eax,0x0
 146:	c3                   	ret    

00000147 <get_args.EXIT>:
 147:	89 ec                	mov    esp,ebp
 149:	5d                   	pop    ebp
 14a:	b8 ff ff ff ff       	mov    eax,0xffffffff
 14f:	c3                   	ret    

00000150 <get_args.USAGE>:
 150:	e8 fc ff ff ff       	call   151 <get_args.USAGE+0x1>
 155:	eb f0                	jmp    147 <get_args.EXIT>
